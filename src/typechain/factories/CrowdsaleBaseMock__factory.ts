/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CrowdsaleBaseMock,
  CrowdsaleBaseMockInterface,
} from "../CrowdsaleBaseMock";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "raiseToken",
        type: "address",
      },
    ],
    name: "CrowdsaleRaiseTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "raiseWallet",
        type: "address",
      },
    ],
    name: "CrowdsaleRaiseWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "CrowdsaleRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "saleToken",
        type: "address",
      },
    ],
    name: "CrowdsaleSaleTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "saleAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "CrowdsaleTokensPurchased",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "forwardFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleAmount",
        type: "uint256",
      },
    ],
    name: "getRaiseAmountFromSaleAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaiseToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaiseTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaiseWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "getSaleAmountFromRaiseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "saleAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "preValidatePurchase",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "raiseToken",
        type: "address",
      },
    ],
    name: "setRaiseToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "raiseWallet",
        type: "address",
      },
    ],
    name: "setRaiseWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "saleToken",
        type: "address",
      },
    ],
    name: "setSaleToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506001600355610e46806100256000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80639623a56311610097578063bcad371611610066578063bcad3716146101d1578063d722cd54146101e4578063ec3dd116146101f7578063f6a55a291461020857600080fd5b80639623a563146101875780639fec6b811461019a578063a29f481c146101ad578063a8a3cf85146101c057600080fd5b80632c8567e5116100d35780632c8567e51461014657806334fcf43714610159578063679aefce1461016c57806392878bd01461017457600080fd5b80630752881a146100fa5780630c7c59471461010f5780631296a3d114610126575b600080fd5b61010d610108366004610c95565b610210565b005b6005545b6040519081526020015b60405180910390f35b61012e61030b565b6040516001600160a01b03909116815260200161011d565b610113610154366004610d10565b610324565b61010d610167366004610d10565b61033f565b600254610113565b61010d610182366004610c95565b61034b565b61010d610195366004610c7b565b610359565b61010d6101a8366004610cbe565b610362565b61010d6101bb366004610c7b565b610372565b6001546001600160a01b031661012e565b61010d6101df366004610c7b565b61037b565b6101136101f2366004610d10565b610384565b6000546001600160a01b031661012e565b610113610394565b600260035414156102685760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b6002600355600061027882610384565b9050336102868483856103ab565b60055461029390846104c1565b6005556102a084836104d4565b836001600160a01b0316816001600160a01b03167f4eebbf6bdaab082237477dc6df1e89a3abed8702f92c56e91fadc87b6efc326384866040516102ee929190918252602082015260400190565b60405180910390a36103008184610501565b505060016003555050565b600061031f6004546001600160a01b031690565b905090565b600061033961033260025490565b8390610537565b92915050565b61034881610543565b50565b6103558282610501565b5050565b610348816105cf565b61036d8383836103ab565b505050565b61034881610680565b610348816107ae565b60025460009061033990836108dc565b600061031f6103a260025490565b600554906108dc565b6001600160a01b0383166104275760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161025f565b816104745760405162461bcd60e51b815260206004820152601a60248201527f43726f776473616c653a2073616c65416d6f756e742069732030000000000000604482015260640161025f565b8061036d5760405162461bcd60e51b815260206004820152601b60248201527f43726f776473616c653a207261697365416d6f756e7420697320300000000000604482015260640161025f565b60006104cd8284610d77565b9392505050565b61035582826104eb6000546001600160a01b031690565b6001600160a01b031691906108e8565b50505050565b6004546103559083906001600160a01b0316836105266001546001600160a01b031690565b6001600160a01b0316929190610991565b60006104cd8284610d8f565b600081116105935760405162461bcd60e51b815260206004820152600d60248201527f726174652069732077726f6e6700000000000000000000000000000000000000604482015260640161025f565b60028190556040518181527f84c1e9b3689efdc1e6c1b125e7ce8e16549975d1ec5a1d4e259f7f72cb4f0066906020015b60405180910390a150565b6001600160a01b0381166106255760405162461bcd60e51b815260206004820152601460248201527f726169736557616c6c657420697320656d707479000000000000000000000000604482015260640161025f565b6004805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f701b9088b062c1ab54ac04678f085f03555b4f27814aad524ecc6e5af1397fde906020016105c4565b6001600160a01b0381166106d65760405162461bcd60e51b815260206004820152601a60248201527f73616c65546f6b656e206164647265737320697320656d707479000000000000604482015260640161025f565b6001600160a01b0381163b6107535760405162461bcd60e51b815260206004820152602160248201527f73616c65546f6b656e2061646472657373206973206e6f7420636f6e7472616360448201527f7400000000000000000000000000000000000000000000000000000000000000606482015260840161025f565b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f89150e457d740699f7726003f5298acabea8552dc69036f97b57707807c00969906020016105c4565b6001600160a01b0381166108045760405162461bcd60e51b815260206004820152601b60248201527f7261697365546f6b656e206164647265737320697320656d7074790000000000604482015260640161025f565b6001600160a01b0381163b6108815760405162461bcd60e51b815260206004820152602260248201527f7261697365546f6b656e2061646472657373206973206e6f7420636f6e74726160448201527f6374000000000000000000000000000000000000000000000000000000000000606482015260840161025f565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081179091556040519081527f6e50aeca61a159cdc18268905846de8bb7fcfe6f1f5917e88942f5672f925566906020016105c4565b60006104cd8284610daf565b6040516001600160a01b03831660248201526044810182905261036d9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526109e2565b6040516001600160a01b03808516602483015283166044820152606481018290526104fb9085907f23b872dd000000000000000000000000000000000000000000000000000000009060840161092d565b6000610a37826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610ac79092919063ffffffff16565b80519091501561036d5780806020019051810190610a559190610cf0565b61036d5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161025f565b6060610ad68484600085610ade565b949350505050565b606082471015610b565760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161025f565b6001600160a01b0385163b610bad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161025f565b600080866001600160a01b03168587604051610bc99190610d28565b60006040518083038185875af1925050503d8060008114610c06576040519150601f19603f3d011682016040523d82523d6000602084013e610c0b565b606091505b5091509150610c1b828286610c26565b979650505050505050565b60608315610c355750816104cd565b825115610c455782518084602001fd5b8160405162461bcd60e51b815260040161025f9190610d44565b80356001600160a01b0381168114610c7657600080fd5b919050565b600060208284031215610c8c578081fd5b6104cd82610c5f565b60008060408385031215610ca7578081fd5b610cb083610c5f565b946020939093013593505050565b600080600060608486031215610cd2578081fd5b610cdb84610c5f565b95602085013595506040909401359392505050565b600060208284031215610d01578081fd5b815180151581146104cd578182fd5b600060208284031215610d21578081fd5b5035919050565b60008251610d3a818460208701610dce565b9190910192915050565b6020815260008251806020840152610d63816040850160208701610dce565b601f01601f19169190910160400192915050565b60008219821115610d8a57610d8a610dfa565b500190565b600082610daa57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610dc957610dc9610dfa565b500290565b60005b83811015610de9578181015183820152602001610dd1565b838111156104fb5750506000910152565b634e487b7160e01b600052601160045260246000fdfea264697066735822122010b97edb8b1f08653270e3608e490f83964b67fa910066d80ca9fe40cfc87de664736f6c63430008040033";

export class CrowdsaleBaseMock__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CrowdsaleBaseMock> {
    return super.deploy(overrides || {}) as Promise<CrowdsaleBaseMock>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): CrowdsaleBaseMock {
    return super.attach(address) as CrowdsaleBaseMock;
  }
  connect(signer: Signer): CrowdsaleBaseMock__factory {
    return super.connect(signer) as CrowdsaleBaseMock__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CrowdsaleBaseMockInterface {
    return new utils.Interface(_abi) as CrowdsaleBaseMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CrowdsaleBaseMock {
    return new Contract(address, _abi, signerOrProvider) as CrowdsaleBaseMock;
  }
}
