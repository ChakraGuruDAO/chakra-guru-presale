/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  KarmaPrivateCrowdsale,
  KarmaPrivateCrowdsaleInterface,
} from "../KarmaPrivateCrowdsale";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "saleToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "raiseToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "raiseWallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "raiseToken",
        type: "address",
      },
    ],
    name: "CrowdsaleRaiseTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "raiseWallet",
        type: "address",
      },
    ],
    name: "CrowdsaleRaiseWalletUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "CrowdsaleRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "CrowdsaleRefund",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "saleToken",
        type: "address",
      },
    ],
    name: "CrowdsaleSaleTokenUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "purchaser",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "saleAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "CrowdsaleTokensPurchased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newVestingVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "prevVestingVault",
        type: "address",
      },
    ],
    name: "CrowdsaleVestingVaultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "buyTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "canRefundable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "capReached",
    outputs: [
      {
        internalType: "bool",
        name: "minSaleCapReached",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "maxSaleCapReached",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getClosingTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
    ],
    name: "getContribution",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOpeningTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "saleAmount",
        type: "uint256",
      },
    ],
    name: "getRaiseAmountFromSaleAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaiseToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRaiseTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "raiseAmount",
        type: "uint256",
      },
    ],
    name: "getSaleAmountFromRaiseAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleCap",
    outputs: [
      {
        internalType: "uint256",
        name: "minSaleCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSaleCap",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "minSaleLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSaleLimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getSaleTokenBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVestingVault",
    outputs: [
      {
        internalType: "contract IVestingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isFinished",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isOpen",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "rate",
        type: "uint256",
      },
    ],
    name: "setRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minSaleCap",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSaleCap",
        type: "uint256",
      },
    ],
    name: "setSaleCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "minSaleLimit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxSaleLimit",
        type: "uint256",
      },
    ],
    name: "setSaleLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "openingTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "closingTime",
        type: "uint256",
      },
    ],
    name: "setTime",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "vestingVault",
        type: "address",
      },
    ],
    name: "setVestingVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawFundsWhenCapNotReached",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001e1338038062001e138339810160408190526200003491620003da565b6200003f336200006e565b60016004556200004f83620000c0565b6200005a82620001e8565b620000658162000307565b50505062000423565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381166200011c5760405162461bcd60e51b815260206004820152601a60248201527f73616c65546f6b656e206164647265737320697320656d70747900000000000060448201526064015b60405180910390fd5b6200013b816001600160a01b0316620003ae60201b620008fb1760201c565b620001935760405162461bcd60e51b815260206004820152602160248201527f73616c65546f6b656e2061646472657373206973206e6f7420636f6e747261636044820152601d60fa1b606482015260840162000113565b600080546001600160a01b0319166001600160a01b0383169081179091556040519081527f89150e457d740699f7726003f5298acabea8552dc69036f97b57707807c00969906020015b60405180910390a150565b6001600160a01b038116620002405760405162461bcd60e51b815260206004820152601b60248201527f7261697365546f6b656e206164647265737320697320656d7074790000000000604482015260640162000113565b6200025f816001600160a01b0316620003ae60201b620008fb1760201c565b620002b85760405162461bcd60e51b815260206004820152602260248201527f7261697365546f6b656e2061646472657373206973206e6f7420636f6e74726160448201526118dd60f21b606482015260840162000113565b600180546001600160a01b0319166001600160a01b0383169081179091556040519081527f6e50aeca61a159cdc18268905846de8bb7fcfe6f1f5917e88942f5672f92556690602001620001dd565b6001600160a01b0381166200035f5760405162461bcd60e51b815260206004820152601460248201527f726169736557616c6c657420697320656d707479000000000000000000000000604482015260640162000113565b600580546001600160a01b0319166001600160a01b0383169081179091556040519081527f701b9088b062c1ab54ac04678f085f03555b4f27814aad524ecc6e5af1397fde90602001620001dd565b6001600160a01b03163b151590565b80516001600160a01b0381168114620003d557600080fd5b919050565b600080600060608486031215620003ef578283fd5b620003fa84620003bd565b92506200040a60208501620003bd565b91506200041a60408501620003bd565b90509250925092565b6119e080620004336000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80637b352962116100f9578063be6becce11610097578063d746357311610071578063d74635731461038b578063ec3dd11614610393578063f2fde38b146103a4578063f6a55a29146103b757600080fd5b8063be6becce14610365578063c797f52f14610370578063d722cd541461037857600080fd5b8063a0355eca116100d3578063a0355eca14610326578063a8a3cf8514610339578063a91468ba1461034a578063b514f4c21461035d57600080fd5b80637b352962146102fa57806381f865f9146103025780638da5cb5b1461031557600080fd5b80633599fa93116101665780634f935945116101405780634f935945146102b8578063679aefce146102d757806370a08231146102df578063715018a6146102f257600080fd5b80633599fa931461025f57806345b3a9031461027b57806347535d7b146102a057600080fd5b806321eff7fc116101a257806321eff7fc146102085780632c8567e5146102315780632f9cb9aa1461024457806334fcf4371461024c57600080fd5b80630752881a146101c95780630c7c5947146101de5780631a337c96146101f5575b600080fd5b6101dc6101d736600461175d565b6103bf565b005b6006545b6040519081526020015b60405180910390f35b6101dc61020336600461188b565b6104c6565b6101e2610216366004611743565b6001600160a01b03166000908152600b602052604090205490565b6101e261023f3660046117a0565b610536565b6008546101e2565b6101dc61025a3660046117a0565b610551565b600c54600d545b604080519283526020830191909152016101ec565b600e546001600160a01b03165b6040516001600160a01b0390911681526020016101ec565b6102a86105b7565b60405190151581526020016101ec565b6102c06105dd565b6040805192151583529015156020830152016101ec565b6002546101e2565b6101e26102ed366004611743565b61060d565b6101dc610618565b6102a861067e565b6101dc61031036600461188b565b6106a3565b6003546001600160a01b0316610288565b6101dc61033436600461188b565b61070f565b6001546001600160a01b0316610288565b6101dc610358366004611743565b61077b565b6101dc6107de565b600954600a54610266565b6102a86107e6565b6101e26103863660046117a0565b6107f5565b6007546101e2565b6000546001600160a01b0316610288565b6101dc6103b2366004611743565b610805565b6101e26108e4565b600260045414156104175760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026004556000610427826107f5565b90503361043584838561090a565b600654610442908461091a565b60065561044f848361092d565b836001600160a01b0316816001600160a01b03167f4eebbf6bdaab082237477dc6df1e89a3abed8702f92c56e91fadc87b6efc3263848660405161049d929190918252602082015260400190565b60405180910390a36104b181858486610937565b6104bb8184610949565b505060016004555050565b6003546001600160a01b031633146105205760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b6105298261097f565b610532816109d4565b5050565b600061054b61054460025490565b8390610a2a565b92915050565b6003546001600160a01b031633146105ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b6105b481610a36565b50565b6000806105c26105dd565b9150506105cd610ac1565b80156105d7575080155b91505090565b60008060006105ea6108e4565b90506000806105fc600954600a549091565b908410159693101594509192505050565b600061054b82610ad9565b6003546001600160a01b031633146106725760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b61067c6000610b7f565b565b6000806106896105dd565b91505061069860085442101590565b806105d75750919050565b6003546001600160a01b031633146106fd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b61070682610bde565b61053281610c33565b6003546001600160a01b031633146107695760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b61077282610c89565b61053281610cdd565b6003546001600160a01b031633146107d55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b6105b481610d8d565b61067c610ea6565b60006107f061103a565b905090565b60025460009061054b9083611059565b6003546001600160a01b0316331461085f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161040e565b6001600160a01b0381166108db5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f6464726573730000000000000000000000000000000000000000000000000000606482015260840161040e565b6105b481610b7f565b60006107f06108f260025490565b60065490611059565b6001600160a01b03163b151590565b610915838383611065565b505050565b600061092682846118fb565b9392505050565b61053282826110f5565b61094384848484611178565b50505050565b6005546105329083906001600160a01b03168361096e6001546001600160a01b031690565b6001600160a01b03169291906111c9565b600081116109cf5760405162461bcd60e51b815260206004820152601760248201527f6d696e2073616c65206c696d69742069732077726f6e67000000000000000000604482015260640161040e565b600c55565b600c548111610a255760405162461bcd60e51b815260206004820152601760248201527f6d61782073616c65206c696d69742069732077726f6e67000000000000000000604482015260640161040e565b600d55565b60006109268284611913565b60008111610a865760405162461bcd60e51b815260206004820152600d60248201527f726174652069732077726f6e6700000000000000000000000000000000000000604482015260640161040e565b60028190556040518181527f84c1e9b3689efdc1e6c1b125e7ce8e16549975d1ec5a1d4e259f7f72cb4f00669060200160405180910390a150565b600060075442101580156107f0575050600854421090565b600e546040517f505a1b310000000000000000000000000000000000000000000000000000000081526001600160a01b038381166004830152600092839291169063505a1b319060240160006040518083038186803b158015610b3b57600080fd5b505afa158015610b4f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b7791908101906117b8565b509392505050565b600380546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008111610c2e5760405162461bcd60e51b815260206004820152601560248201527f6d696e2073616c65206361702069732077726f6e670000000000000000000000604482015260640161040e565b600955565b6009548111610c845760405162461bcd60e51b815260206004820152601560248201527f6d61782073616c65206361702069732077726f6e670000000000000000000000604482015260640161040e565b600a55565b428111610cd85760405162461bcd60e51b815260206004820152601560248201527f6f70656e696e672074696d652069732077726f6e670000000000000000000000604482015260640161040e565b600755565b600754610d2c5760405162461bcd60e51b815260206004820152601760248201527f6f70656e696e672074696d65206973206e6f7420736574000000000000000000604482015260640161040e565b4281118015610d3c575060075481115b610d885760405162461bcd60e51b815260206004820152601560248201527f636c6f73696e672074696d652069732077726f6e670000000000000000000000604482015260640161040e565b600855565b6001600160a01b038116610de35760405162461bcd60e51b815260206004820152601060248201527f6164647265737320697320656d70747900000000000000000000000000000000604482015260640161040e565b6001600160a01b0381163b610e3a5760405162461bcd60e51b815260206004820152601760248201527f61646472657373206973206e6f7420636f6e7472616374000000000000000000604482015260640161040e565b600e80546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff198316811790935560408051938452911660208301819052917f3ec520624ee6b2221b624eb377f7a1af6900e6ae4dcf14f9f149dfc4421850f6910160405180910390a15050565b60026004541415610ef95760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161040e565b6002600455610f0661103a565b610f525760405162461bcd60e51b815260206004820152601260248201527f63616e206e6f7420726566756e6461626c650000000000000000000000000000604482015260640161040e565b600154600554336000818152600f602052604090205490926001600160a01b0390811692169080610fc55760405162461bcd60e51b815260206004820152601560248201527f6e6f7420616d6f756e7420726566756e6461626c650000000000000000000000604482015260640161040e565b6001600160a01b038085166000908152600f6020526040812055610fed9084168386846111c9565b604080516001600160a01b0386168152602081018390527f9136dc99c8179a8ce0d9ba183eac9c2950cc15d083f0a099a88b33d8178861fd910160405180910390a1505060016004555050565b6000611044611251565b80156107f0575061105361125b565b15905090565b60006109268284611933565b61107083838361126d565b6001600160a01b0383166000908152600b6020526040812054611093908461091a565b9050600c5481101580156110a95750600d548111155b6109435760405162461bcd60e51b815260206004820152601c60248201527f62656e65666963696172792773206c696d697420657863656564656400000000604482015260640161040e565b600e546040517f96074e700000000000000000000000000000000000000000000000000000000081526001600160a01b03848116600483015260248201849052909116906396074e7090604401600060405180830381600087803b15801561115c57600080fd5b505af1158015611170573d6000803e3d6000fd5b505050505050565b611184848484846112e0565b6001600160a01b0384166000908152600f60205260409020546111a7908261091a565b6001600160a01b039094166000908152600f6020526040902093909355505050565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052610943908590611325565b60006107f061067e565b6000806112666105dd565b5092915050565b61127883838361140a565b60006112826108e4565b600a54909150611292828561091a565b11156109435760405162461bcd60e51b815260206004820152600c60248201527f6361702065786365656465640000000000000000000000000000000000000000604482015260640161040e565b6001600160a01b0383166000908152600b6020526040902054611303908361091a565b6001600160a01b039093166000908152600b6020526040902092909255505050565b600061137a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166114699092919063ffffffff16565b80519091501561091557808060200190518101906113989190611786565b6109155760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161040e565b611415838383611480565b61141d610ac1565b6109155760405162461bcd60e51b815260206004820152601360248201527f63726f776473616c6520697320636c6f73656400000000000000000000000000604482015260640161040e565b60606114788484600085611596565b949350505050565b6001600160a01b0383166114fc5760405162461bcd60e51b815260206004820152602a60248201527f43726f776473616c653a2062656e656669636961727920697320746865207a6560448201527f726f206164647265737300000000000000000000000000000000000000000000606482015260840161040e565b816115495760405162461bcd60e51b815260206004820152601a60248201527f43726f776473616c653a2073616c65416d6f756e742069732030000000000000604482015260640161040e565b806109155760405162461bcd60e51b815260206004820152601b60248201527f43726f776473616c653a207261697365416d6f756e7420697320300000000000604482015260640161040e565b60608247101561160e5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161040e565b6001600160a01b0385163b6116655760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161040e565b600080866001600160a01b0316858760405161168191906118ac565b60006040518083038185875af1925050503d80600081146116be576040519150601f19603f3d011682016040523d82523d6000602084013e6116c3565b606091505b50915091506116d38282866116de565b979650505050505050565b606083156116ed575081610926565b8251156116fd5782518084602001fd5b8160405162461bcd60e51b815260040161040e91906118c8565b80356001600160a01b038116811461172e57600080fd5b919050565b8051801515811461172e57600080fd5b600060208284031215611754578081fd5b61092682611717565b6000806040838503121561176f578081fd5b61177883611717565b946020939093013593505050565b600060208284031215611797578081fd5b61092682611733565b6000602082840312156117b1578081fd5b5035919050565b600080604083850312156117ca578182fd5b8251915060208084015167ffffffffffffffff808211156117e9578384fd5b818601915086601f8301126117fc578384fd5b81518181111561180e5761180e611994565b8060051b604051601f19603f8301168101818110858211171561183357611833611994565b604052828152858101935084860182860187018b1015611851578788fd5b8795505b8386101561187a5761186681611733565b855260019590950194938601938601611855565b508096505050505050509250929050565b6000806040838503121561189d578182fd5b50508035926020909101359150565b600082516118be818460208701611952565b9190910192915050565b60208152600082518060208401526118e7816040850160208701611952565b601f01601f19169190910160400192915050565b6000821982111561190e5761190e61197e565b500190565b60008261192e57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561194d5761194d61197e565b500290565b60005b8381101561196d578181015183820152602001611955565b838111156109435750506000910152565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212202f29a8497f2f7b2dd6e45905f1bf8d78de85ed1910d06b3621c94b36e5baac3d64736f6c63430008040033";

export class KarmaPrivateCrowdsale__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    saleToken: string,
    raiseToken: string,
    raiseWallet: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<KarmaPrivateCrowdsale> {
    return super.deploy(
      saleToken,
      raiseToken,
      raiseWallet,
      overrides || {}
    ) as Promise<KarmaPrivateCrowdsale>;
  }
  getDeployTransaction(
    saleToken: string,
    raiseToken: string,
    raiseWallet: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      saleToken,
      raiseToken,
      raiseWallet,
      overrides || {}
    );
  }
  attach(address: string): KarmaPrivateCrowdsale {
    return super.attach(address) as KarmaPrivateCrowdsale;
  }
  connect(signer: Signer): KarmaPrivateCrowdsale__factory {
    return super.connect(signer) as KarmaPrivateCrowdsale__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KarmaPrivateCrowdsaleInterface {
    return new utils.Interface(_abi) as KarmaPrivateCrowdsaleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KarmaPrivateCrowdsale {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as KarmaPrivateCrowdsale;
  }
}
